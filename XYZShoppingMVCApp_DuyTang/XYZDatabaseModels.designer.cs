#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XYZShoppingMVCApp_DuyTang
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="XYZEVEDB")]
	public partial class XYZDatabaseModelsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProductCategory(ProductCategory instance);
    partial void UpdateProductCategory(ProductCategory instance);
    partial void DeleteProductCategory(ProductCategory instance);
    #endregion
		
		public XYZDatabaseModelsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["XYZEVEDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public XYZDatabaseModelsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public XYZDatabaseModelsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public XYZDatabaseModelsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public XYZDatabaseModelsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<ProductCategory> ProductCategories
		{
			get
			{
				return this.GetTable<ProductCategory>();
			}
		}
		
		public System.Data.Linq.Table<CustomerInfo> CustomerInfos
		{
			get
			{
				return this.GetTable<CustomerInfo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductId;
		
		private System.Nullable<int> _CatID;
		
		private string _ProductSDesc;
		
		private string _ProductLDesc;
		
		private string _ProductImage;
		
		private System.Nullable<decimal> _Price;
		
		private bool _Instock;
		
		private int _Inventory;
		
		private EntityRef<ProductCategory> _ProductCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnCatIDChanging(System.Nullable<int> value);
    partial void OnCatIDChanged();
    partial void OnProductSDescChanging(string value);
    partial void OnProductSDescChanged();
    partial void OnProductLDescChanging(string value);
    partial void OnProductLDescChanged();
    partial void OnProductImageChanging(string value);
    partial void OnProductImageChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnInstockChanging(bool value);
    partial void OnInstockChanged();
    partial void OnInventoryChanging(int value);
    partial void OnInventoryChanged();
    #endregion
		
		public Product()
		{
			this._ProductCategory = default(EntityRef<ProductCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatID", DbType="Int")]
		public System.Nullable<int> CatID
		{
			get
			{
				return this._CatID;
			}
			set
			{
				if ((this._CatID != value))
				{
					if (this._ProductCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCatIDChanging(value);
					this.SendPropertyChanging();
					this._CatID = value;
					this.SendPropertyChanged("CatID");
					this.OnCatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductSDesc", DbType="VarChar(50)")]
		public string ProductSDesc
		{
			get
			{
				return this._ProductSDesc;
			}
			set
			{
				if ((this._ProductSDesc != value))
				{
					this.OnProductSDescChanging(value);
					this.SendPropertyChanging();
					this._ProductSDesc = value;
					this.SendPropertyChanged("ProductSDesc");
					this.OnProductSDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLDesc", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ProductLDesc
		{
			get
			{
				return this._ProductLDesc;
			}
			set
			{
				if ((this._ProductLDesc != value))
				{
					this.OnProductLDescChanging(value);
					this.SendPropertyChanging();
					this._ProductLDesc = value;
					this.SendPropertyChanged("ProductLDesc");
					this.OnProductLDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductImage", DbType="VarChar(50)")]
		public string ProductImage
		{
			get
			{
				return this._ProductImage;
			}
			set
			{
				if ((this._ProductImage != value))
				{
					this.OnProductImageChanging(value);
					this.SendPropertyChanging();
					this._ProductImage = value;
					this.SendPropertyChanged("ProductImage");
					this.OnProductImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instock", DbType="Bit NOT NULL")]
		public bool Instock
		{
			get
			{
				return this._Instock;
			}
			set
			{
				if ((this._Instock != value))
				{
					this.OnInstockChanging(value);
					this.SendPropertyChanging();
					this._Instock = value;
					this.SendPropertyChanged("Instock");
					this.OnInstockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inventory", DbType="Int NOT NULL")]
		public int Inventory
		{
			get
			{
				return this._Inventory;
			}
			set
			{
				if ((this._Inventory != value))
				{
					this.OnInventoryChanging(value);
					this.SendPropertyChanging();
					this._Inventory = value;
					this.SendPropertyChanged("Inventory");
					this.OnInventoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCategory_Product", Storage="_ProductCategory", ThisKey="CatID", OtherKey="CatID", IsForeignKey=true)]
		public ProductCategory ProductCategory
		{
			get
			{
				return this._ProductCategory.Entity;
			}
			set
			{
				ProductCategory previousValue = this._ProductCategory.Entity;
				if (((previousValue != value) 
							|| (this._ProductCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCategory.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._ProductCategory.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._CatID = value.CatID;
					}
					else
					{
						this._CatID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCategories")]
	public partial class ProductCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatID;
		
		private string _CatDesc;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatIDChanging(int value);
    partial void OnCatIDChanged();
    partial void OnCatDescChanging(string value);
    partial void OnCatDescChanged();
    #endregion
		
		public ProductCategory()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CatID
		{
			get
			{
				return this._CatID;
			}
			set
			{
				if ((this._CatID != value))
				{
					this.OnCatIDChanging(value);
					this.SendPropertyChanging();
					this._CatID = value;
					this.SendPropertyChanged("CatID");
					this.OnCatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatDesc", DbType="VarChar(100)")]
		public string CatDesc
		{
			get
			{
				return this._CatDesc;
			}
			set
			{
				if ((this._CatDesc != value))
				{
					this.OnCatDescChanging(value);
					this.SendPropertyChanging();
					this._CatDesc = value;
					this.SendPropertyChanged("CatDesc");
					this.OnCatDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCategory_Product", Storage="_Products", ThisKey="CatID", OtherKey="CatID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductCategory = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerInfos")]
	public partial class CustomerInfo
	{
		
		private int _UserID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Address;
		
		private string _Zipcode;
		
		private string _City;
		
		private string _State;
		
		private string _CCNumber;
		
		private string _CCExpiration;
		
		private string _CCType;
		
		private string _Email;
		
		public CustomerInfo()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zipcode", DbType="VarChar(50)")]
		public string Zipcode
		{
			get
			{
				return this._Zipcode;
			}
			set
			{
				if ((this._Zipcode != value))
				{
					this._Zipcode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCNumber", DbType="VarChar(50)")]
		public string CCNumber
		{
			get
			{
				return this._CCNumber;
			}
			set
			{
				if ((this._CCNumber != value))
				{
					this._CCNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCExpiration", DbType="VarChar(50)")]
		public string CCExpiration
		{
			get
			{
				return this._CCExpiration;
			}
			set
			{
				if ((this._CCExpiration != value))
				{
					this._CCExpiration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCType", DbType="VarChar(50)")]
		public string CCType
		{
			get
			{
				return this._CCType;
			}
			set
			{
				if ((this._CCType != value))
				{
					this._CCType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
